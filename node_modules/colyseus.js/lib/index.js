"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SchemaSerializer = exports.FossilDeltaSerializer = exports.registerSerializer = void 0;
require("./legacy");
var Client_1 = require("./Client");
Object.defineProperty(exports, "Client", { enumerable: true, get: function () { return Client_1.Client; } });
var Protocol_1 = require("./Protocol");
Object.defineProperty(exports, "Protocol", { enumerable: true, get: function () { return Protocol_1.Protocol; } });
Object.defineProperty(exports, "ErrorCode", { enumerable: true, get: function () { return Protocol_1.ErrorCode; } });
var Room_1 = require("./Room");
Object.defineProperty(exports, "Room", { enumerable: true, get: function () { return Room_1.Room; } });
var Auth_1 = require("./Auth");
Object.defineProperty(exports, "Auth", { enumerable: true, get: function () { return Auth_1.Auth; } });
Object.defineProperty(exports, "Platform", { enumerable: true, get: function () { return Auth_1.Platform; } });
/*
 * Serializers
 */
var FossilDeltaSerializer_1 = require("./serializer/FossilDeltaSerializer");
Object.defineProperty(exports, "FossilDeltaSerializer", { enumerable: true, get: function () { return FossilDeltaSerializer_1.FossilDeltaSerializer; } });
var SchemaSerializer_1 = require("./serializer/SchemaSerializer");
Object.defineProperty(exports, "SchemaSerializer", { enumerable: true, get: function () { return SchemaSerializer_1.SchemaSerializer; } });
var NoneSerializer_1 = require("./serializer/NoneSerializer");
var Serializer_1 = require("./serializer/Serializer");
Object.defineProperty(exports, "registerSerializer", { enumerable: true, get: function () { return Serializer_1.registerSerializer; } });
Serializer_1.registerSerializer('fossil-delta', FossilDeltaSerializer_1.FossilDeltaSerializer);
Serializer_1.registerSerializer('schema', SchemaSerializer_1.SchemaSerializer);
Serializer_1.registerSerializer('none', NoneSerializer_1.NoneSerializer);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsb0JBQWtCO0FBRWxCLG1DQUErQztBQUF0QyxnR0FBQSxNQUFNLE9BQUE7QUFDZix1Q0FBaUQ7QUFBeEMsb0dBQUEsUUFBUSxPQUFBO0FBQUUscUdBQUEsU0FBUyxPQUFBO0FBQzVCLCtCQUE2QztBQUFwQyw0RkFBQSxJQUFJLE9BQUE7QUFFYiwrQkFBZ0Q7QUFBdkMsNEZBQUEsSUFBSSxPQUFBO0FBQUUsZ0dBQUEsUUFBUSxPQUFBO0FBRXZCOztHQUVHO0FBRUgsNEVBQTJFO0FBSzlDLHNHQUxwQiw2Q0FBcUIsT0FLb0I7QUFKbEQsa0VBQWlFO0FBSWIsaUdBSjNDLG1DQUFnQixPQUkyQztBQUhwRSw4REFBNkQ7QUFDN0Qsc0RBQTZEO0FBRXBELG1HQUZBLCtCQUFrQixPQUVBO0FBQzNCLCtCQUFrQixDQUFDLGNBQWMsRUFBRSw2Q0FBcUIsQ0FBQyxDQUFDO0FBQzFELCtCQUFrQixDQUFDLFFBQVEsRUFBRSxtQ0FBZ0IsQ0FBQyxDQUFDO0FBQy9DLCtCQUFrQixDQUFDLE1BQU0sRUFBRSwrQkFBYyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJy4vbGVnYWN5JztcblxuZXhwb3J0IHsgQ2xpZW50LCBKb2luT3B0aW9ucyB9IGZyb20gJy4vQ2xpZW50JztcbmV4cG9ydCB7IFByb3RvY29sLCBFcnJvckNvZGUgfSBmcm9tICcuL1Byb3RvY29sJztcbmV4cG9ydCB7IFJvb20sIFJvb21BdmFpbGFibGUgfSBmcm9tICcuL1Jvb20nO1xuZXhwb3J0IHsgRGF0YUNoYW5nZSB9IGZyb20gJ0BnYW1lc3RkaW8vc3RhdGUtbGlzdGVuZXInO1xuZXhwb3J0IHsgQXV0aCwgUGxhdGZvcm0sIERldmljZSB9IGZyb20gXCIuL0F1dGhcIjtcblxuLypcbiAqIFNlcmlhbGl6ZXJzXG4gKi9cblxuaW1wb3J0IHsgRm9zc2lsRGVsdGFTZXJpYWxpemVyIH0gZnJvbSAnLi9zZXJpYWxpemVyL0Zvc3NpbERlbHRhU2VyaWFsaXplcic7XG5pbXBvcnQgeyBTY2hlbWFTZXJpYWxpemVyIH0gZnJvbSBcIi4vc2VyaWFsaXplci9TY2hlbWFTZXJpYWxpemVyXCI7XG5pbXBvcnQgeyBOb25lU2VyaWFsaXplciB9IGZyb20gXCIuL3NlcmlhbGl6ZXIvTm9uZVNlcmlhbGl6ZXJcIjtcbmltcG9ydCB7IHJlZ2lzdGVyU2VyaWFsaXplciB9IGZyb20gJy4vc2VyaWFsaXplci9TZXJpYWxpemVyJztcblxuZXhwb3J0IHsgcmVnaXN0ZXJTZXJpYWxpemVyLCBGb3NzaWxEZWx0YVNlcmlhbGl6ZXIsIFNjaGVtYVNlcmlhbGl6ZXIgfTtcbnJlZ2lzdGVyU2VyaWFsaXplcignZm9zc2lsLWRlbHRhJywgRm9zc2lsRGVsdGFTZXJpYWxpemVyKTtcbnJlZ2lzdGVyU2VyaWFsaXplcignc2NoZW1hJywgU2NoZW1hU2VyaWFsaXplcik7XG5yZWdpc3RlclNlcmlhbGl6ZXIoJ25vbmUnLCBOb25lU2VyaWFsaXplcik7XG4iXX0=