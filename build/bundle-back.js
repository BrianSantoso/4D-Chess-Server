/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! express */ \"express\");\n/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(express__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! http */ \"http\");\n/* harmony import */ var http__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(http__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var socket_io__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! socket.io */ \"socket.io\");\n/* harmony import */ var socket_io__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(socket_io__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _public_js_UI_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./public/js/UI.js */ \"./public/js/UI.js\");\n/* harmony import */ var _public_js_GameBoard_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./public/js/GameBoard.js */ \"./public/js/GameBoard.js\");\n\n\n\n\n\n\n\nconst PORT = process.env.PORT || 3000;\n// ES6 substitute for CJS __dirname \n// https://techsparx.com/nodejs/esnext/dirname-es-modules.html\n//const __dirname = path.dirname(new URL(import.meta.url).pathname);\n//const publicPath = path.join(__dirname, 'public');\nconst publicPath = \"./public\"\n\nconst app = express__WEBPACK_IMPORTED_MODULE_1___default()();\nconst server = http__WEBPACK_IMPORTED_MODULE_2___default.a.Server(app);\nconst io = socket_io__WEBPACK_IMPORTED_MODULE_3___default()(server);\n\n\n//eval(fs.readFileSync('./public/js/three.js')+'');\n//eval(fs.readFileSync('./public/js/UI.js')+'');\n//eval(fs.readFileSync('./public/js/GameBoard.js')+'');\n//eval(fs.readFileSync('./public/js/MoveManager.js')+'');\n//eval(fs.readFileSync('./public/js/Piece.js')+'');\n//eval(fs.readFileSync('./public/js/Mode.js')+'');\n//import * as THREE from './public/js/three.js';\n\n\n//import MoveManager from './public/js/MoveManager.js';\n//import Piece from './public/js/Piece.js';\n//import Mode from './public/js/Mode.js';\n\n\nlet toolbarProxy = new _public_js_UI_js__WEBPACK_IMPORTED_MODULE_5__[\"EmptyUI\"]();\n\napp.get('/:gameID(g[A-Za-z0-9]{7})', (req, res) => {\n\tres.sendFile(path__WEBPACK_IMPORTED_MODULE_0___default.a.join(publicPath, 'index.html'));\n});\n\napp.use(express__WEBPACK_IMPORTED_MODULE_1___default.a.static('public'));\napp.use('/sandbox', express__WEBPACK_IMPORTED_MODULE_1___default.a.static('public'));\napp.use('/localGame', express__WEBPACK_IMPORTED_MODULE_1___default.a.static('public'));\n\nlet gameRooms = {}\nlet matchmaker = new MatchMaker();\nlet socketsOnline = 0;\n\nio.on('connect', (socket) => {\n\t// add custom event listeners here\n\tconsole.log('socket connected: ', socket.id)\n\tsocketsOnline += 1;\n\t\n\tsocket.on('join', (gameID) => {\n\t\tGameRoom.join(socket, gameID)\n\t});\n\t\n\tsocket.on('matchmake', () => {\n\t\tmatchmaker.matchmake(socket)\n\t});\n\t\n\tsocket.on('submit move', (move) => {\n\t\tconsole.log(socket.room, 'received move', move)\n\t\tGameRoom.move(socket, move);\n\t\tsocket.broadcast.to(socket.room).emit('serve move', move);\n\t})\n\t\n\tsocket.on('chat message', (message) => {\n        console.log('got message', message);\n        io.to(socket.room).emit('chat message', message);\n    });\n\t\n\tsocket.on('disconnect', () => {\n\t\tconsole.log('socket disconnected ', socket.id)\n\t\tmatchmaker.remove(socket);\n\t\tGameRoom.disconnect(socket);\n\t\tsocketsOnline -= 1;\n\t});\n});\n\nserver.listen(PORT, () => {\n\tconsole.log('\\t :: Express :: Listening on port ' + PORT );\n});\n\n\n\nfunction GameRoom(gameID) {\n\t\n\t// TODO: close gameroom on disconnects\n\tthis.gameID = gameID;\n\tthis.roomID = `room_${gameID}`;\n\tthis.players = []\n\tthis.spectators = []\n\tthis.numSockets = 0;\n\tthis.gameManager = new MoveManager(new _public_js_GameBoard_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"](4, _public_js_GameBoard_js__WEBPACK_IMPORTED_MODULE_6__[\"EmptyBoardGraphics\"], null), -2, Mode.ONLINE_MULTIPLAYER);\n\t\n\tthis.addSocket = function(socket) {\n\t\tGameRoom.disconnect(socket);\n\t\t\n\t\tsocket.room = this.roomID;\n\t\tsocket.join(this.roomID);\n\t\tconsole.log('\\tsocket ', socket.id, 'joined room ', this.roomID)\n\t\tlet playerAssignment = {\n\t\t\tgameData: this.gameManager.package(),\n\t\t\tgameID: this.gameID\n\t\t}\n\t\tif (this.players.length < 2) {\n\t\t\tthis.players.push(socket)\n\t\t\tObject.assign(playerAssignment, {\n\t\t\t\tclientTeam: this.players.length - 1,\n\t\t\t\tready: this.players.length == 2\n\t\t\t})\n\t\t} else {\n\t\t\tthis.spectators.push(socket)\n\t\t\tObject.assign(playerAssignment, {\n\t\t\t\tclientTeam: -1,\n\t\t\t\tready: true\n\t\t\t})\n\t\t}\n\t\tthis.numSockets += 1;\n\t\t\n\t\tsocket.broadcast.to(this.roomID).emit('player joined', playerAssignment);\n\t\tsocket.emit('player assignment', playerAssignment);\n\t\treturn playerAssignment;\n\t}\n\t\n\tthis.removeSocket = function(socket) {\n\t\tthis.numSockets -= 1;\n\t\tif (this.numSockets <= 0) {\n\t\t\tconsole.log('disbanding game room: ', this.roomID);\n\t\t\tdelete gameRooms[this.roomID]\n\t\t}\n\t}\n}\n\nGameRoom.new = function() {\n\tconst gameID = GameRoom.genGameId();\n\tconst room = `room_${gameID}`;\n\tgameRooms[room] = new GameRoom(gameID);\n\treturn gameRooms[room];\n}\n\nGameRoom.disconnect = function(socket) {\n\tconsole.log('\\tLeaving previous room: ', socket.room)\n\t// removes socket from its current room\n\tconst gameRoom = gameRooms[socket.room];\n\tif (gameRoom) {\n\t\tgameRoom.removeSocket(socket);\n\t}\n\tsocket.leave(socket.room);\n}\n\nGameRoom.genGameId = function() {\n\treturn 'gxxxxxxx'.replace(/[x]/g, function(character) {\n\t\tconst r = Math.random() * 16 | 0\n\t\tconst v = character == 'x' ? r : (r & 0x3 | 0x8);\n\t\treturn v.toString(16);\n\t});\n}\n\nGameRoom.join = function(socket, gameID) {\n\tconsole.log('\\trequested to join: ', gameID);\n\tconst room = `room_${gameID}`;\n\tif (!gameRooms[room]) {\n\t\tconsole.log('RoomID ', room, 'not found. Creating new room')\n\t\tgameRooms[room] = new GameRoom(gameID);\n\t}\n\tconst playerAssignment = gameRooms[room].addSocket(socket);\n}\n\nGameRoom.move = function(socket, move) {\n\tconst gameRoom = gameRooms[socket.room];\n\tgameRoom.gameManager.move(move.x0, move.y0, move.z0, move.w0, move.x1, move.y1, move.z1, move.w1, true);\n}\n\nfunction MatchMaker() {\n\tthis.q = []\n\t\n\tthis.matchmake = function(socket) {\n\t\tthis.addToQ(socket);\n\t\tconsole.log('adding socket ', socket.id, 'to matchmaking queue')\n\t\twhile (this.q.length >= 2) {\n\t\t\tconst socket1 = this.q[0];\n\t\t\tconst socket2 = this.q[1];\n\t\t\tconst newRoom = GameRoom.new();\n\t\t\tthis.remove(socket1);\n\t\t\tthis.remove(socket2);\n\t\t\t\n\t\t\tnewRoom.addSocket(socket1);\n\t\t\tnewRoom.addSocket(socket2);\n\t\t\t\n\t\t\tconsole.log('match found! roomID: ', newRoom.roomID, newRoom)\n\t\t\tconsole.log('socket1 room: ', socket1.rooms)\n\t\t\tconsole.log('socket2 room: ', socket2.rooms)\n\t\t}\n\t}\n\t\n\tthis.addToQ = function(socket) {\n\t\tthis.q.push(socket);\n\t}\n\t\n\tthis.remove = function(socket) {\n\t\tconst index = this.q.indexOf(socket);\n\t\tif (index >= 0) {\n\t\t\tthis.q.splice(index, 1);\n\t\t\tconsole.log('\\removed socket ', socket.id, 'from matchmaking queue')\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n}\n\n//# sourceURL=webpack:///./index.js?");

/***/ }),

/***/ "./public/js/GameBoard.js":
/*!********************************!*\
  !*** ./public/js/GameBoard.js ***!
  \********************************/
/*! exports provided: default, BoardGraphics, EmptyBoardGraphics */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BoardGraphics\", function() { return BoardGraphics; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EmptyBoardGraphics\", function() { return EmptyBoardGraphics; });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ \"three\");\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _Piece_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Piece.js */ \"./public/js/Piece.js\");\n/* harmony import */ var _Utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Utils.js */ \"./public/js/Utils.js\");\n/* harmony import */ var _Models_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Models.js */ \"./public/js/Models.js\");\n\n\n\n\n/*\n\n    Board Scale: 3 --> 300 x 300\n    Piece Scale: 9\n    Vertical Increment: 600 / (n=6) = 100\n    Horizontal Increment: 450, but Space between boards: 150\n\n*/\n\nGameBoard.prototype = {\n    \n    initPieces: function(){\n        //\n        // Logic\n        //\n        \n        // Instantiate pieces\n        const range = n => [...Array(n)].map((_, i) => i);\n        const rangeIn = dims => {\n          if (!dims.length) return new _Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\n          return range(dims[0]).map(_ => rangeIn(dims.slice(1)));\n        };\n        \n        const pieces = rangeIn([this.n, this.n, this.n, this.n])\n        \n        //\n        // Graphics\n        //\n\t\treturn pieces;\n    },\n    \n\t// GameBoard.move should only be called from MoveManager. All move data received from server should pass through MoveManager.\n    move: function(x0, y0, z0, w0, x1, y1, z1, w1){\n\t\tthis.graphics.hidePossibleMoves(); // TODO: replace with pointer deselection\n\t\tconst metaData = {}\n\t\t\n\t\tconst targetPiece = this.pieces[x1][y1][z1][w1];\n\t\tif(targetPiece.type){\n\t\t\tObject.assign(metaData, {capturedPiece: targetPiece});\n\t\t}\n        const piece = this.pieces[x0][y0][z0][w0];\n\t\t\n\t\tthis.graphics.moveMesh(piece, x1, y1, z1, w1);\n        \n\t\tthis.pieces[x0][y0][z0][w0] = new _Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](); // Remove game object from board\n\t\tthis.removePiece(x1, y1, z1, w1); // Immediately remove target game object and sprite (do nothing if square is empty)\n        this.pieces[x1][y1][z1][w1] = piece; // Replace object in target square with moved piece\n        Object.assign(metaData, piece.update(this.pieces, x0, y0, z0, w0, x1, y1, z1, w1));\n\t\t\n\t\tif(piece.type === 'pawn' && this.isOnPromotionSquare(x1, y1, z1, w1)){\n\t\t\t// Normal capture logic and animation is still executed,\n\t\t\t// but here we replace the pawn's game object with a Queen game object\n\t\t\t// Notice that we do not use GameObject.removePiece() method because\n\t\t\t// it will also remove its mesh, which we only want once the animation\n\t\t\t// finishes\n\t\t\t\n\t\t\t// The following 2 lines were causing bugs when spamming redo after a pawn promotion. Error was that the queen's mesh is undefined. The queen's .mesh property was not being set until the animation was complete. The fix was to create the mesh and set the queen's .mesh property immediately in the promotion logic, and only make it appear (add it to piecesContainer) when the animation is finished.\n//\t\t\tqueen = new Queen(piece.team);\n//\t\t\tthis.pieces[x1][y1][z1][w1] = queen;\n\t\t\tlet queen = this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Queen\"], piece.team, x1, y1, z1, w1, false);\n\t\t\tpiece.descendant = queen;\n\t\t\t\n\t\t\tObject.assign(metaData, {promotion: true, newPiece: queen, oldPiece: piece});\n\t\t}\n\t\t\n        return metaData;\n    },\n\t\n\tundo: function(move){\n\t\tthis.graphics.hidePossibleMoves(); // TODO: replace with pointer deselection\n\t\tconst pieceInOriginalLoc = this.pieces[move.x0][move.y0][move.z0][move.w0];\n\t\tif(pieceInOriginalLoc.type){\n\t\t\tconsole.error('Unknown error. A piece is already located in original location')\n\t\t}\n\t\tconst originalPiece = move.metaData.promotion ? move.metaData.oldPiece : this.pieces[move.x1][move.y1][move.z1][move.w1];\n\t\tthis.pieces[move.x0][move.y0][move.z0][move.w0] = originalPiece;\n\t\t\n\t\tconst capturedPiece = move.metaData.capturedPiece || new _Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\n\t\tif(move.metaData.promotion){\n\t\t\tthis.graphics.respawnMesh(originalPiece, move.x1, move.y1, move.z1, move.w1);\n\t\t\tthis.removePiece(move.x1, move.y1, move.z1, move.w1); // TODO: THIS IS SCARY. If bugs occur separate the graphics component of removePiece into a new method. The current implementaiton might cause errors...\n\t\t}\n\t\tthis.pieces[move.x1][move.y1][move.z1][move.w1] = capturedPiece;\n\t\t\n\t\tif (move.metaData.capturedPiece) {\n\t\t\tthis.graphics.respawnMesh(capturedPiece, move.x1, move.y1, move.z1, move.w1); \n\t\t}\n\t\tif (move.metaData.justMoved) {\n\t\t\toriginalPiece.hasMoved = false;\n\t\t}\n\t\tthis.graphics.moveMesh(originalPiece, move.x0, move.y0, move.z0, move.w0);\n\t},\n\t\n\tinCheck: function(team) {\n\t\tlet attackers = _Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inCheck(this.pieces, team);\n\t\treturn attackers.length > 0;\n\t},\n\t\n\twinCondition: function() {\n\t\tif (_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inCheckmate(this.pieces, 0)) {\n\t\t\treturn 1;\n\t\t} else if (_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inCheckmate(this.pieces, 1)) {\n\t\t\treturn 0;\n\t\t} else if (_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inStalemate(this.pieces, 0) || _Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inStalemate(this.pieces, 1)){\n\t\t\treturn 2;\n\t\t} else {\n\t\t\treturn -1;\n\t\t}\n\t},\n\t\n\tapplyToAll: function(f){\n\t\tfor(let x = 0; x < this.pieces.length; x++){\n\t\t\tfor(let y = 0; y < this.pieces[0].length; y++){\n\t\t\t\tfor(let z = 0; z < this.pieces[0][0].length; z++){\n\t\t\t\t\tfor(let w = 0; w < this.pieces[0][0][0].length; w++){\n\t\t\t\t\t\tconst piece = this.pieces[x][y][z][w]\n\t\t\t\t\t\tf(piece)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t\n\tapplyToPieces: function(f){\n\t\tfunction onlyPieces(piece){\n\t\t\tif(piece.type)\n\t\t\t\tf(piece)\n\t\t}\n\t\tthis.applyToAll(onlyPieces)\n\t},\n\t\n\tapplyToTeam: function(f, team){\n\t\tfunction onlyTeam(piece){\n\t\t\tif(piece.team === team){\n\t\t\t\tf(piece)\n\t\t\t}\n\t\t}\n\t\tthis.applyToPieces(onlyTeam)\n\t},\n    \n\t\n\t\n    isOnPromotionSquare: function(x, y, z, w){\n\t\tconst piece = this.pieces[x][y][z][w]\n\t\tconst promotionLoc = piece.team > 0 ? 0 : this.n - 1\n\t\treturn z === promotionLoc && w === promotionLoc\n    },\n    \n    spawnPiece: function(PieceConstructor, team, x, y, z, w, addToContainer=true){\n        const piece = new PieceConstructor(team)\n        this.pieces[x][y][z][w] = piece\n\t\tthis.graphics.setMesh(piece, x, y, z, w, addToContainer);\n\t\treturn piece;\n    },\n\t\n\tremovePiece: function(x, y, z, w){\n\t\tconst piece = this.pieces[x][y][z][w]\n\t\tthis.graphics.removeMesh(piece);\n\t\tthis.pieces[x][y][z][w] = new _Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\n\t},\n    \n    inBounds: function(x, y, z, w) {\n        return x >= 0 && x < this.n && y >= 0 && y < this.n && z >=0 && z < this.n && w >=0 && w < this.n;\n    },\n\t\n\tpackage: function() {\n\t\tconst x = this.pieces;\n\t\tconst pieces = x.map(y => \n\t\t\ty.map(z => \n\t\t\t\tz.map(w => \n\t\t\t\t\tw.map(piece => piece.package())\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t\treturn pieces;\n\t},\n\t\n\tloadPieces: function(piecesArr) {\n\t\tthis.graphics.abandon(); // remove all meshes from scene\n\t\tconst Graphics = (this.graphics instanceof BoardGraphics) ? BoardGraphics : EmptyBoardGraphics;\n\t\tthis.graphics = new Graphics(this) // create new graphics\n\t\t\n\t\tthis.pieces = this.initPieces();\n\t\tfor (let x = 0; x < this.n; x++) {\n\t\t\tfor (let y = 0; y < this.n; y++) {\n\t\t\t\tfor(let z = 0; z < this.n; z++) {\n\t\t\t\t\tfor(let w = 0; w < this.n; w++) {\n\t\t\t\t\t\tconst read = piecesArr[x][y][z][w];\n\t\t\t\t\t\tif (read.type) {\n\t\t\t\t\t\t\tconst PieceConstructor = _Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].typeToConstructor[read.type];\n\t\t\t\t\t\t\tlet piece = this.spawnPiece(PieceConstructor, read.team, x, y, z, w);\n\t\t\t\t\t\t\tObject.assign(piece, read);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n    \n    test: function(x, y, z, w){\n        \n        if(x == null) x = getRandomInteger(0, this.n)\n        if(y == null) y = getRandomInteger(0, this.n)\n        if(z == null) z = getRandomInteger(0, this.n)\n        if(w == null) w = getRandomInteger(0, this.n)\n\t\t\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Rook\"], 0, 0, 0, 0, 0)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Knight\"], 0, 1, 0, 0, 0)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Knight\"], 0, 2, 0, 0, 0)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Rook\"], 0, 3, 0, 0, 0)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Bishop\"], 0, 0, 1, 0, 0)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 0, 1, 1, 0, 0)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 0, 2, 1, 0, 0)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Bishop\"], 0, 3, 1, 0, 0)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Bishop\"], 0, 0, 2, 0, 0)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Queen\"], 0, 1, 2, 0, 0)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"King\"], 0, 2, 2, 0, 0)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Bishop\"], 0, 3, 2, 0, 0)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Rook\"], 0, 0, 3, 0, 0)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Knight\"], 0, 1, 3, 0, 0)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Knight\"], 0, 2, 3, 0, 0)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Rook\"], 0, 3, 3, 0, 0)\n        \n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 0, 0, 0, 1, 0)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 0, 1, 0, 1, 0)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 0, 2, 0, 1, 0)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 0, 3, 0, 1, 0)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 0, 0, 1, 1, 0)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 0, 1, 1, 1, 0)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 0, 2, 1, 1, 0)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 0, 3, 1, 1, 0)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 0, 0, 2, 1, 0)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 0, 1, 2, 1, 0)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 0, 2, 2, 1, 0)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 0, 3, 2, 1, 0)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 0, 0, 3, 1, 0)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 0, 1, 3, 1, 0)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 0, 2, 3, 1, 0)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 0, 3, 3, 1, 0)\n        \n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 0, 0, 0, 0, 1)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 0, 1, 0, 0, 1)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 0, 2, 0, 0, 1)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 0, 3, 0, 0, 1)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 0, 0, 1, 0, 1)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 0, 1, 1, 0, 1)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 0, 2, 1, 0, 1)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 0, 3, 1, 0, 1)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 0, 0, 2, 0, 1)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 0, 1, 2, 0, 1)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 0, 2, 2, 0, 1)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 0, 3, 2, 0, 1)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 0, 0, 3, 0, 1)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 0, 1, 3, 0, 1)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 0, 2, 3, 0, 1)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 0, 3, 3, 0, 1)\n        \n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 0, 0, 0, 1, 1)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 0, 1, 0, 1, 1)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 0, 2, 0, 1, 1)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 0, 3, 0, 1, 1)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 0, 0, 1, 1, 1)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 0, 1, 1, 1, 1)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 0, 2, 1, 1, 1)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 0, 3, 1, 1, 1)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 0, 0, 2, 1, 1)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 0, 1, 2, 1, 1)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 0, 2, 2, 1, 1)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 0, 3, 2, 1, 1)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 0, 0, 3, 1, 1)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 0, 1, 3, 1, 1)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 0, 2, 3, 1, 1)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 0, 3, 3, 1, 1)\n        \n        const l = this.n - 1 // Back row (black)\n        const m = l - 1 // Front Row (black)\n        \n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Rook\"], 1, 0, 0, l, l)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Knight\"], 1, 1, 0, l, l)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Knight\"], 1, 2, 0, l, l)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Rook\"], 1, 3, 0, l, l)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Bishop\"], 1, 0, 1, l, l)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 1, 1, 1, l, l)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 1, 2, 1, l, l)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Bishop\"], 1, 3, 1, l, l)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Bishop\"], 1, 0, 2, l, l)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Queen\"], 1, 1, 2, l, l)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"King\"], 1, 2, 2, l, l)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Bishop\"], 1, 3, 2, l, l)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Rook\"], 1, 0, 3, l, l)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Knight\"], 1, 1, 3, l, l)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Knight\"], 1, 2, 3, l, l)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Rook\"], 1, 3, 3, l, l)\n        \n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 1, 0, 0, m, l)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 1, 1, 0, m, l)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 1, 2, 0, m, l)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 1, 3, 0, m, l)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 1, 0, 1, m, l)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 1, 1, 1, m, l)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 1, 2, 1, m, l)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 1, 3, 1, m, l)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 1, 0, 2, m, l)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 1, 1, 2, m, l)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 1, 2, 2, m, l)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 1, 3, 2, m, l)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 1, 0, 3, m, l)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 1, 1, 3, m, l)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 1, 2, 3, m, l)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 1, 3, 3, m, l)\n        \n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 1, 0, 0, l, m)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 1, 1, 0, l, m)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 1, 2, 0, l, m)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 1, 3, 0, l, m)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 1, 0, 1, l, m)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 1, 1, 1, l, m)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 1, 2, 1, l, m)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 1, 3, 1, l, m)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 1, 0, 2, l, m)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 1, 1, 2, l, m)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 1, 2, 2, l, m)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 1, 3, 2, l, m)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 1, 0, 3, l, m)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 1, 1, 3, l, m)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 1, 2, 3, l, m)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 1, 3, 3, l, m)\n        \n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 1, 0, 0, m, m)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 1, 1, 0, m, m)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 1, 2, 0, m, m)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 1, 3, 0, m, m)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 1, 0, 1, m, m)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 1, 1, 1, m, m)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 1, 2, 1, m, m)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 1, 3, 1, m, m)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 1, 0, 2, m, m)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 1, 1, 2, m, m)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 1, 2, 2, m, m)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 1, 3, 2, m, m)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 1, 0, 3, m, m)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 1, 1, 3, m, m)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 1, 2, 3, m, m)\n        this.spawnPiece(_Piece_js__WEBPACK_IMPORTED_MODULE_1__[\"Pawn\"], 1, 3, 3, m, m)\n        \n    }\n    \n}\n\n\nEmptyBoardGraphics.prototype = {\n\t\n\tgetBoundingBox: function() {},\n\t\n\tgetCenter: function(){},\n\t\n\tboardCoordinates: function(x, y, z, w){},\n\t\n\tworldCoordinates: function(pos){},\n\t\n\tshowPossibleMoves: function(locations, piece, materialScheme={}, canRayCast){},\n    \n    showPossibleMoves2: function(x, y, z, w, materialScheme){},\n    \n    hidePossibleMoves: function(objectName='possibleMoves'){},\n\t\n\tmoveMesh: function(piece, x1, y1, z1, w1){},\n\t\n\tcreateMesh: function(typeString, team, x, y, z, w, addToContainer=true){},\n\t\n\tsetMesh: function(piece, x, y, z, w, addToContainer=true){},\n\t\n\tremoveMesh: function(piece){},\n\t\n\trespawnMesh: function(piece){},\n\t\n\tsetSelectability: function(piece, canMove) {},\n\t\n\taddToPiecesContainer: function(mesh) {},\n\t\n\tabandon: function() {}\n\t\n}\n\n\n\n\n\nBoardGraphics.prototype = {\n\t\n\tgetBoundingBox: function() {\n\t\tconst offset = this.boardSize / 2;\n\t\tconst originOffset = new three__WEBPACK_IMPORTED_MODULE_0__[\"Vector3\"](offset, 0, -offset);\n\t\tconst logicalLocalOrigin = originOffset.clone().multiplyScalar(-1);\n\t\tconst globalLLO = logicalLocalOrigin.clone().add(this.mesh.position);\n\t\t\n\t\tconst globalBottomLeft = logicalLocalOrigin.clone().add(this.mesh.position);\n\t\tconst halfDiagonal = this.getCenter().sub(globalLLO);\n\t\tconst extraHeight = new three__WEBPACK_IMPORTED_MODULE_0__[\"Vector3\"](0, this.verticalIncrement, 0);\n\t\tconst globalTopRight = this.getCenter().clone().add(halfDiagonal).clone().add(extraHeight);\n\t\t\n\t\tconst extraSpace = new three__WEBPACK_IMPORTED_MODULE_0__[\"Vector3\"](this.squareSize * 0, 0, -this.squareSize)\n\t\t\n\t\treturn {\n\t\t\tbottomLeft: globalBottomLeft.sub(extraSpace),\n\t\t\ttopRight: globalTopRight.add(extraSpace)\n\t\t};\n\t},\n\t\n\tgetCenter: function(){\n\t\tconst numHalfBoards = (this.n - 1) / 2;\n\t\tconst localZ = -(this.boardSize + this.horizontalGap) * numHalfBoards;\n\t\tconst localY = this.verticalIncrement * numHalfBoards;\n\t\tconst localCenter = new three__WEBPACK_IMPORTED_MODULE_0__[\"Vector3\"](0, localY, localZ);\n\t\treturn localCenter.add(this.mesh.position);\n\t},\n\t\n\tboardCoordinates: function(x, y, z, w){\n        \n        // Get world coordinates from board coordinates\n        \n        const zero = new three__WEBPACK_IMPORTED_MODULE_0__[\"Vector3\"]((0.5 * this.squareSize) - (0.5 * this.squareSize * this.n), 0, (0.5 * this.squareSize * this.n) - (0.5 * this.squareSize))\n        \n        const xShift = x * this.squareSize\n        const yShift = y * this.verticalIncrement + this.EPSILON\n        const zShift = -(z * this.squareSize + w * this.horizontalIncrement)\n        const translation = new three__WEBPACK_IMPORTED_MODULE_0__[\"Vector3\"](xShift, yShift, zShift)\n        \n        return zero.add(translation).add(this.boardContainer.position)\n        \n    },\n\t\n\tworldCoordinates: function(pos){\n        \n        // Get board coordinates from world coordinates\n        const zero = new three__WEBPACK_IMPORTED_MODULE_0__[\"Vector3\"]((0.5 * this.squareSize) - (0.5 * this.squareSize * this.n), 0, (0.5 * this.squareSize * this.n) - (0.5 * this.squareSize))\n        pos = pos.clone().sub(zero).sub(this.boardContainer.position)\n        \n        let x = Math.floor(pos.x / this.squareSize)\n        let y = Math.floor(pos.y / this.verticalIncrement)\n        let numGaps = Math.floor(-pos.z / this.horizontalIncrement)\n        let z = Math.floor((-pos.z - (numGaps * this.horizontalIncrement)) / this.squareSize)\n        let w = numGaps\n        \n//        pos.sub(this.boardContainer.position)\n        \n        return new three__WEBPACK_IMPORTED_MODULE_0__[\"Vector4\"](x, y, z, w)\n    },\n\t\n\tshowPossibleMoves: function(locations, piece, materialScheme={}, canRayCast){\n\t\tmaterialScheme = Object.assign({\n\t\t\t0: {\n\t\t\t\tmoveMaterial: _Models_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].materials.green,\n\t\t\t\tattackMaterial: _Models_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].materials.red\n\t\t\t},\n\t\t\t1: {\n\t\t\t\tmoveMaterial: _Models_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].materials.green,\n\t\t\t\tattackMaterial: _Models_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].materials.red\n\t\t\t},\n\t\t}, materialScheme)\n\t\t\n        this.hidePossibleMoves();\n\t\t\n        locations.forEach(pos => {\n\t\t\t\n\t\t\tcoordinates = this.boardCoordinates(pos.x, pos.y, pos.z, pos.w)\n\t\t\tlet material;\n\t\t\tlet shadowPiece;\n\t\t\tif(pos.possibleCapture){\n\t\t\t\tconst attackedPiece = this.gameBoard.pieces[pos.x][pos.y][pos.z][pos.w]\n\t\t\t\tmaterial = materialScheme[piece.team].attackMaterial;\n\t\t\t\tshadowPiece = _Models_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].createMesh(attackedPiece.type, material, coordinates.x, coordinates.y, coordinates.z, 1, canRayCast)\n\t\t\t\tif(attackedPiece.team === 0){\n\t\t\t\t\tObject(_Utils_js__WEBPACK_IMPORTED_MODULE_2__[\"rotateObject\"])(shadowPiece, 0, 180, 0)\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet material = materialScheme[piece.team].moveMaterial;\n\t\t\t\tshadowPiece = _Models_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].createMesh(piece.type, material, coordinates.x, coordinates.y, coordinates.z, 1, canRayCast)\n\t\t\t}\n\t\t\t\t\n\t\t\tthis.possibleMovesContainer.add(shadowPiece)\n            \n            \t\t\t\n        });\n        \n    },\n    \n    showPossibleMoves2: function(x, y, z, w, materialScheme){\n      \n        const locations = this.pieces[x][y][z][w].getPossibleMoves(this.pieces, x, y, z, w)\n        \n        this.showPossibleMoves(locations, piece, materialScheme, true)\n        \n    },\n    \n    hidePossibleMoves: function(objectName='possibleMoves'){\n        while(this.possibleMovesContainer.children.length){\n\t\t\tconst mesh = this.possibleMovesContainer.children[0]\n\t\t\tSelector.unhighlight(mesh)\n            this.possibleMovesContainer.remove(mesh);\n        }\n    },\n\t\n\tmoveMesh: function(piece, x1, y1, z1, w1){\n\t\tconst currentMeshCoords = piece.mesh.position\n        const newMeshCoords = this.boardCoordinates(x1, y1, z1, w1)\n        \n        const frames = 12\n        const interpolatedCoords = Animation.linearInterpolate(currentMeshCoords, newMeshCoords, frames)\n        Animation.addToQueue(animationQueue, piece.mesh, interpolatedCoords)\n        piece.mesh.canRayCast = false // temporarily disable piece's ability to be found in rayCast\n        \n        animationQueue[animationQueue.length - 1].onAnimate = function(){\n            piece.mesh.canRayCast = true // re-enable piece's ability to be found in rayCast\n            if(piece.type === 'pawn' && this.isOnPromotionSquare(x1, y1, z1, w1)){\n\t\t\t\t// Normal capture logic and animation is still executed,\n\t\t\t\t// but here we remove the pawn's sprite and spawn in a queen\n\t\t\t\t// Notice that we do not use GameObject.removePiece() method because\n\t\t\t\t// it will also remove its game object, which is logic that should \n\t\t\t\t// be separate from graphics\n\t\t\t\tthis.graphics.removeMesh(piece)\n\t\t\t\tthis.graphics.addToPiecesContainer(piece.descendant.mesh); // Only add mesh to scene when animation is finished\n//\t\t\t\tthis.graphics.piecesContainer.add(queen.mesh); \n            }\n        }.bind(this.gameBoard)\n\t},\n\t\n\tcreateMesh: function(typeString, team, x, y, z, w, addToContainer=true){ \n//\t\tconsole.log(new THREE.Vector3)\n\t\t// Create mesh (without game object), add it to the scene, and return the mesh\n\t\tconst worldPos = this.boardCoordinates(x, y, z, w)\n\t\tconst material = team === 0 ? _Models_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].materials.white : _Models_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].materials.black\n\t\tconst mesh = _Models_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].createMesh(typeString, material, worldPos.x, worldPos.y, worldPos.z)\n\t\tif(team === 0) Object(_Utils_js__WEBPACK_IMPORTED_MODULE_2__[\"rotateObject\"])(mesh, 0, 180, 0)\n\t\tif(addToContainer){\n\t\t\tthis.piecesContainer.add(mesh)\n\t\t}\n\t\t\n\t\treturn mesh\n\t\t\n\t},\n\t\n\tsetMesh: function(piece, x, y, z, w, addToContainer=true){\n//\t\tconst worldPos = this.boardCoordinates(x, y, z, w)\n//\t\tconst mesh = this.createMesh(piece.type, piece.team, worldPos.x, worldPos.y, worldPos.z, worldPos.w);\n\t\tconst mesh = this.createMesh(piece.type, piece.team, x, y, z, w, addToContainer);\n        piece.setMesh(mesh);\n\t},\n\t\n\tremoveMesh: function(piece){\n\t\tthis.piecesContainer.remove(piece.mesh);\n\t},\n\t\n\trespawnMesh: function(piece, x, y, z, w){\n\t\tif (piece.mesh) {\n\t\t\tthis.piecesContainer.add(piece.mesh);\n\t\t} else {\n\t\t\tpiece.mesh = this.createMesh(piece.type, piece.team, x, y, z, w, true);\n\t\t}\n\t\t\n\t},\n\t\n\tsetSelectability: function(piece, canMove) {\n\t\tpiece.mesh.selectable = canMove;\n\t},\n\t\n\taddToPiecesContainer: function(mesh) {\n\t\tthis.piecesContainer.add(mesh); \n\t},\n\t\n\tabandon: function() {\n\t\tthis.scene.remove(this.mesh)\n\t}\n\t\n}\n\n\nfunction GameBoard(n=4, Graphics, scene){\n\t\n    this.n = n;\n\tthis.graphics = new Graphics(this, scene);\n    this.pieces = this.initPieces();\n    \n    let halfN = Math.floor((this.n - 1) / 2)\n    this.test(halfN, halfN, halfN+2, halfN)\n\t\n\tthis.setSelectability = function(team, canMove){\n\t\t// Enable/Disable piece rayCasting (block user interaction)\n\t\tthis.applyToTeam(function(piece){\n\t\t\tthis.graphics.setSelectability(piece, canMove);\n//\t\t\tpiece.mesh.selectable = canMove\n\t\t}.bind(this), team)\n\t};\n\t\n\t\n}\n\nfunction BoardGraphics(gameBoard, scene) {\n\tthis.gameBoard = gameBoard;\n\tthis.scene = scene;\n\tthis.n = gameBoard.n;\n\tthis.squareSize = 50\n\tthis.boardSize = this.squareSize * this.n;\n    this.verticalIncrement = 100 * 1.75\n    this.horizontalGap = this.squareSize * 1.6\n    this.horizontalIncrement = this.n * this.squareSize + this.horizontalGap\n    this.globalLength = this.horizontalIncrement * (this.n - 1)\n    this.globalHeight = this.verticalIncrement * this.n\n\tthis.boardHeight = 5;\n    this.EPSILON = 1\n\t\n\tthis.mesh = new three__WEBPACK_IMPORTED_MODULE_0__[\"Object3D\"]();\n\tthis.boardContainer = new three__WEBPACK_IMPORTED_MODULE_0__[\"Object3D\"]();\n    this.piecesContainer = new three__WEBPACK_IMPORTED_MODULE_0__[\"Object3D\"]();\n    this.possibleMovesContainer = new three__WEBPACK_IMPORTED_MODULE_0__[\"Object3D\"]();\n\tthis.boardContainer.name = 'boardContainer';\n\tthis.piecesContainer.name = 'piecesContaier';\n\tthis.possibleMovesContainer.name = 'possibleMovesContainer';\n\tthis.mesh.add(this.boardContainer)\n\tthis.mesh.add(this.piecesContainer)\n\tthis.mesh.add(this.possibleMovesContainer)\n\tthis.scene.add(this.mesh);\n\t\n\tlet bottom = 0;\n\tlet left = 0;\n\tfor (let w = 0; w < this.n; w++){\n\t\tfor(let i = 0; i < this.n; i++){\n\t\t\tlet z = i;\n\t\t\tlet opacity = 0.4;\n\t\t\tlet checker = BoardGraphics.checkerboard3d(this.n, this.n * this.squareSize, z, w, opacity, this.boardHeight) // Construct 2D checkerboard planes\n\t\t\tchecker.position.set(0, bottom + i*this.verticalIncrement, left - w*this.horizontalIncrement)\n\t\t\tObject(_Utils_js__WEBPACK_IMPORTED_MODULE_2__[\"rotateObject\"])(checker, -90, 0, 0)\n\t\t\tthis.boardContainer.add(checker)\n\t\t}\n\t}\n\t\n}\n\nBoardGraphics.checkerboard = function(segments=8, boardSize=100, z=0, w=0, opacity=0.5){\n    \n    let geometry = new three__WEBPACK_IMPORTED_MODULE_0__[\"PlaneGeometry\"](boardSize, boardSize, segments, segments)\n//    let geometry = new THREE.BoxGeometry(boardSize, boardSize, 5, segments, segments, 1)\n    let materialEven = new three__WEBPACK_IMPORTED_MODULE_0__[\"MeshBasicMaterial\"]({color: 0xccccfc})\n    let materialOdd = new three__WEBPACK_IMPORTED_MODULE_0__[\"MeshBasicMaterial\"]({color: 0x444464})\n    let materials = [materialEven, materialOdd]\n\n    materials.forEach(m => {\n        m.transparent = true\n        m.opacity = opacity\n        m.side = three__WEBPACK_IMPORTED_MODULE_0__[\"DoubleSide\"];\n    })\n\n    let i = j = 0;\n\n    for(let x = 0; x < segments; x++){\n      for(let y = 0; y < segments; y++){\n          let i = x * segments + y\n          let j = i * 2\n          geometry.faces[j].materialIndex = geometry.faces[j + 1].materialIndex = (x + y + z + w) % 2\n      }\n    }\n\t\n    return new three__WEBPACK_IMPORTED_MODULE_0__[\"Mesh\"](geometry, materials)\n//    return new THREE.Mesh(geometry, new THREE.MeshBasicMaterial({color: 0x000000}))\n}\n\nBoardGraphics.checkerboard3d = function(segments=8, boardSize=100, z=0, w=0, opacity=0.5, boardHeight=5){\n\t\n\tconst BOARD_HEIGHT = boardHeight;\n\t\n\tlet topGeometry = new three__WEBPACK_IMPORTED_MODULE_0__[\"PlaneGeometry\"](boardSize, boardSize, segments, segments);\n\tlet bottomGeometry = new three__WEBPACK_IMPORTED_MODULE_0__[\"PlaneGeometry\"](boardSize, boardSize, segments, segments);\n\tlet materialsTop = [new three__WEBPACK_IMPORTED_MODULE_0__[\"MeshBasicMaterial\"]({color: 0xccccfc}), new three__WEBPACK_IMPORTED_MODULE_0__[\"MeshBasicMaterial\"]({color: 0x444464})];\n\tlet materialsBottom = [new three__WEBPACK_IMPORTED_MODULE_0__[\"MeshBasicMaterial\"]({color: 0xccccfc}), new three__WEBPACK_IMPORTED_MODULE_0__[\"MeshBasicMaterial\"]({color: 0x444464})];\n\tmaterialsTop.forEach(m => {\n        m.transparent = true;\n        m.opacity = opacity;\n        m.side = three__WEBPACK_IMPORTED_MODULE_0__[\"FrontSide\"];\n    });\n\tmaterialsBottom.forEach(m => {\n        m.transparent = true\n        m.opacity = opacity\n        m.side = three__WEBPACK_IMPORTED_MODULE_0__[\"BackSide\"];\n    });\n\tfor(let x = 0; x < segments; x++){\n      for(let y = 0; y < segments; y++){\n          let i = x * segments + y;\n          let j = i * 2;\n          topGeometry.faces[j].materialIndex = topGeometry.faces[j + 1].materialIndex = (x + y + z + w) % 2;\n\t\t  bottomGeometry.faces[j].materialIndex = bottomGeometry.faces[j + 1].materialIndex = (x + y + z + w) % 2\n      }\n    }\n\t\n\tlet topMesh = new three__WEBPACK_IMPORTED_MODULE_0__[\"Mesh\"](topGeometry, materialsTop);\n\tlet bottomMesh = new three__WEBPACK_IMPORTED_MODULE_0__[\"Mesh\"](bottomGeometry, materialsBottom);\n\tbottomMesh.position.set(0, 0, -BOARD_HEIGHT);\n\t\n\tlet sideGeometry = new three__WEBPACK_IMPORTED_MODULE_0__[\"PlaneGeometry\"](BOARD_HEIGHT, boardSize, 1, segments);\n\tlet materialsSide = [new three__WEBPACK_IMPORTED_MODULE_0__[\"MeshBasicMaterial\"]({color: 0x444464}), new three__WEBPACK_IMPORTED_MODULE_0__[\"MeshBasicMaterial\"]({color: 0xccccfc})];\n\tmaterialsSide.forEach(m => {\n        m.transparent = true\n        m.opacity = opacity\n        m.side = three__WEBPACK_IMPORTED_MODULE_0__[\"FrontSide\"];\n    });\n\tfor(let x = 0; x < segments; x++){\n      for(let y = 0; y < 1; y++){\n          let i = x * 1 + y;\n          let j = i * 2;\n          sideGeometry.faces[j].materialIndex = sideGeometry.faces[j + 1].materialIndex = ((x + y + z + w) % 2) ^ (segments % 2);\n      }\n    }\n\tlet sideMesh1 = new three__WEBPACK_IMPORTED_MODULE_0__[\"Mesh\"](sideGeometry, materialsSide);\n\tlet sideMesh2 = new three__WEBPACK_IMPORTED_MODULE_0__[\"Mesh\"](sideGeometry, materialsSide);\n\tlet sideMesh3 = new three__WEBPACK_IMPORTED_MODULE_0__[\"Mesh\"](sideGeometry, materialsSide);\n\tlet sideMesh4 = new three__WEBPACK_IMPORTED_MODULE_0__[\"Mesh\"](sideGeometry, materialsSide);\n\tObject(_Utils_js__WEBPACK_IMPORTED_MODULE_2__[\"rotateObject\"])(sideMesh1, 0, 90, 0) //front\n\tObject(_Utils_js__WEBPACK_IMPORTED_MODULE_2__[\"rotateObject\"])(sideMesh2, 90, 0, 90) //left\n\tObject(_Utils_js__WEBPACK_IMPORTED_MODULE_2__[\"rotateObject\"])(sideMesh3, 180, -90, 0) //back\n\tObject(_Utils_js__WEBPACK_IMPORTED_MODULE_2__[\"rotateObject\"])(sideMesh4, -90, 0, -90) //right\n\tsideMesh1.position.set(boardSize/2, 0, -BOARD_HEIGHT/2)\n\tsideMesh2.position.set(0, -boardSize/2, -BOARD_HEIGHT/2)\n\tsideMesh3.position.set(-boardSize/2, 0, -BOARD_HEIGHT/2)\n\tsideMesh4.position.set(0, boardSize/2, -BOARD_HEIGHT/2)\n\t\n\tlet boxContainer = new three__WEBPACK_IMPORTED_MODULE_0__[\"Group\"]();\n\tboxContainer.add(topMesh);\n\tboxContainer.add(bottomMesh);\n\tboxContainer.add(sideMesh1);\n\tboxContainer.add(sideMesh2);\n\tboxContainer.add(sideMesh3);\n\tboxContainer.add(sideMesh4);\n\treturn boxContainer;\n\t\n\t\n}\n\nfunction EmptyBoardGraphics(gameBoard, scene) {\n\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (GameBoard);\n\n\n//# sourceURL=webpack:///./public/js/GameBoard.js?");

/***/ }),

/***/ "./public/js/Models.js":
/*!*****************************!*\
  !*** ./public/js/Models.js ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ \"three\");\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var three_gltf_loader__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! three-gltf-loader */ \"three-gltf-loader\");\n/* harmony import */ var three_gltf_loader__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(three_gltf_loader__WEBPACK_IMPORTED_MODULE_1__);\n//// Use local copy of three that supports legacy JSON loader\n//import * as THREE from \"./three.js\";\n\n//import { GLTFLoader } from 'three/examples/js/loaders/GLTFLoader';\n//import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\n\n\nconst Models = {\n    \n    SCALE_FACTOR: 9,\n    \n    materials: {\n        black: {\n//            color: 0x110C11,\n            color: 0x818181,\n            reflectivity: 0.1,\n            shininess: 20,\n            shading: three__WEBPACK_IMPORTED_MODULE_0__[\"SmoothShading\"],\n            transparent: false,\n            opacity: 1.0\n        },\n    \n        white: {\n            color: 0xFCF6E3,\n            reflectivity: 10,\n            shininess: 25,\n            shading: three__WEBPACK_IMPORTED_MODULE_0__[\"SmoothShading\"],\n            transparent: false,\n            opacity: 1.0\n\n        },\n    \n        red: {\n            color: 0xFF0000,\n            reflectivity: 10,\n            shininess: 25,\n            shading: three__WEBPACK_IMPORTED_MODULE_0__[\"SmoothShading\"],\n            transparent: true,\n            opacity: 0.6,\n//            alphaTest: 0.5\n        },\n        \n        green: {\n            color: 0x90EE90,\n            reflectivity: 10,\n            shininess: 25,\n            shading: three__WEBPACK_IMPORTED_MODULE_0__[\"SmoothShading\"],\n            transparent: true,\n            opacity: 0.6,\n//            alphaTest: 0.5\n        },\n        \n        darkGreen: {\n            color: 0x006400,\n            reflectivity: 10,\n            shininess: 25,\n            shading: three__WEBPACK_IMPORTED_MODULE_0__[\"SmoothShading\"],\n            transparent: true,\n            opacity: 0.6,\n        },\n\t\t\n\t\tlightGreen: {\n            color: 0x42f5aa,\n            reflectivity: 10,\n            shininess: 25,\n            shading: three__WEBPACK_IMPORTED_MODULE_0__[\"SmoothShading\"],\n            transparent: true,\n            opacity: 0.6,\n        },\n        \n        orange: {\n            color: 0xFFA500,\n            reflectivity: 10,\n            shininess: 25,\n            shading: three__WEBPACK_IMPORTED_MODULE_0__[\"SmoothShading\"],\n            transparent: true,\n            opacity: 0.4,\n//            alphaTest: 0.5\n        },\n        \n        blue: {\n            color: 0x00B9FF,\n            reflectivity: 10,\n            shininess: 25,\n            shading: three__WEBPACK_IMPORTED_MODULE_0__[\"SmoothShading\"],\n            transparent: true,\n            opacity: 0.4,\n//            alphaTest: 0.5\n        },\n        \n//        black: new THREE.MeshPhongMaterial({\n//            color: 0x110C11,\n//            reflectivity: 0.1,\n//            shininess: 20,\n//            shading: THREE.SmoothShading,\n//            transparent: true,\n//            opacity: 1.0\n//        }),\n//    \n//        white: new THREE.MeshPhongMaterial({\n//            color: 0xFCF6E3,\n//            reflectivity: 10,\n//            shininess: 25,\n//            shading: THREE.SmoothShading,\n//            transparent: true,\n//            opacity: 1.0\n//\n//        }),\n//    \n//        red: new THREE.MeshPhongMaterial({\n//            color: 0xFF0000,\n//            reflectivity: 10,\n//            shininess: 25,\n//            shading: THREE.SmoothShading,\n//            transparent: true,\n//            opacity: 0.4,\n////            alphaTest: 0.5\n//        })\n        \n    },\n    \n    directory: 'models/',\n    \n    pieceData: [\n        {\n            name: 'pawn',\n            fileName: 'Pawn.model.glb',\n            rotation: new three__WEBPACK_IMPORTED_MODULE_0__[\"Vector3\"](0, 0, 0)\n        }, {\n            name: 'rook',\n            fileName: 'Rook.model.glb',\n            rotation: new three__WEBPACK_IMPORTED_MODULE_0__[\"Vector3\"](0, -90, 0)\n        }, {\n            name: 'bishop',\n            fileName: 'Bishop.model.glb',\n            rotation: new three__WEBPACK_IMPORTED_MODULE_0__[\"Vector3\"](0, -90, 0)\n        }, {\n            name: 'knight',\n            fileName: 'Knight.model.glb',\n            rotation: new three__WEBPACK_IMPORTED_MODULE_0__[\"Vector3\"](0, 90, 0)\n        }, {\n            name: 'queen',\n            fileName: 'Queen.model.glb',\n            rotation: new three__WEBPACK_IMPORTED_MODULE_0__[\"Vector3\"](0, 0, 0)\n        }, {\n            name: 'king',\n            fileName: 'King.model.glb',\n            rotation: new three__WEBPACK_IMPORTED_MODULE_0__[\"Vector3\"](0, 0, 0)\n        }\n    ],\n    \n    createMesh: function(piece, material, x=0, y=0, z=0, scale=1, canRayCast=true){\n        \n//        const manager = new THREE.LoadingManager();\n//        const loader = new THREE.JSONLoader(manager);\n//        const path = Models.directory + Models[piece].fileName;\n//        \n//        loader.load(path, function(geometry, materials) {\n//            var mesh = new THREE.Mesh(geometry, material);\n//            mesh.position.set(3, 0, 21);\n//            mesh.rotation.set(Models[piece].rotation.x, Models[piece].rotation.y, Models[piece].rotation.z);\n//            mesh.castShadow = true;\n//            mesh.receiveShadow = true;\n//\n//            mesh.scale.set(4, 4, 4)\n//            scene.add(mesh)\n//        });\n        \n        const pieceData = Models.pieceData[Models.pieceIndices[piece]]\n        const geometry = Models.geometries[piece]\n//\t\tconsole.log(\"GEOMETRY:\", geometry)\n        let mesh = new three__WEBPACK_IMPORTED_MODULE_0__[\"Mesh\"](geometry, new three__WEBPACK_IMPORTED_MODULE_0__[\"MeshPhongMaterial\"](material))\n//        let mesh = new THREE.Mesh(geometry, new THREE.MeshNormalMaterial(material))\n        mesh.position.set(0, 0, 0);\n        mesh.rotation.set(pieceData.rotation.x, pieceData.rotation.y, pieceData.rotation.z);\n        mesh.castShadow = true;\n        mesh.receiveShadow = true;\n\n\t\tmesh.scale.set(Models.SCALE_FACTOR, Models.SCALE_FACTOR, Models.SCALE_FACTOR)\n//\t\tconsole.log(\"MESH: \", mesh)\n//\t\tconst height = new THREE.Box3().setFromObject(mesh).max.y;\n//\t\tconst dHeight = height * (scale - 1)\n\t\t\n\t\tmesh.scale.multiplyScalar(scale)\n\t\tmesh.position.set(x, y, z)\n\t\t\n\t\t\n\t\t\n        \n        mesh.canRayCast = canRayCast;\n        \n        return mesh\n        \n        \n    },\n    \n    geometries: {},\n    pieceIndices: {},\n//\tloadModels: function() {\n//\t\tlet promises = [];\n//\t\tModels.pieceData.forEach(piece => {\n//\t\t\tconst path = Models.directory + piece.fileName;\n//\t\t\tlet promise = new Promise((resolve, reject) => {\n//\t\t\t\tloader.load(path, geometry => {\n//\t\t\t\t\tModels.geometries[piece.name] = geometry;\n//\t\t\t\t\tresolve();\n//\t\t\t\t});\n//\t\t\t});\n//\t\t});\n//\t\t\n//\t\treturn Promise.all(promises);\n//\t}\n//    loadModels: function(){\n//\t\treturn new Promise(function(resolve, reject) {\n//\t\t\t// Loads all chess models then calls init when finished\n//\t\t\tconst manager = new THREE.LoadingManager();\n//\t\t\tmanager.onLoad = resolve // Initialize game when finished loading\n//\t\t\tconst loader = new THREE.JSONLoader(manager);\n//\n//\t\t\tlet index = 0;\n//\t\t\tModels.pieceData.forEach(piece => {\n//\n//\t\t\t\tconst path = Models.directory + piece.fileName\n//\t\t\t\tloader.load(path, function(geometry, materials) {\n//\t\t\t\t\tModels.geometries[piece.name] = geometry\n//\t\t\t\t});\n//\n//\t\t\t\tModels.pieceIndices[piece.name] = index++\n//\t\t\t});\n//\t\t});\n//    }\n//\tloadModels: function(){\n//\t\treturn new Promise(function(resolve, reject) {\n//\t\t\t// Loads all chess models then calls init when finished\n//\t\t\tconst manager = new THREE.LoadingManager();\n//\t\t\tmanager.onLoad = resolve // Initialize game when finished loading\n//\t\t\tconst loader = new THREE.ObjectLoader(manager);\n//\n//\t\t\tlet index = 0;\n//\t\t\tModels.pieceData.forEach(piece => {\n//\n//\t\t\t\tconst path = Models.directory + piece.fileName\n//\t\t\t\tloader.load(path, function(geometry, materials) {\n//\t\t\t\t\tModels.geometries[piece.name] = geometry\n//\t\t\t\t});\n//\n//\t\t\t\tModels.pieceIndices[piece.name] = index++\n//\t\t\t});\n//\t\t});\n//    }\n  \tloadModels: function(){\n\t\t// https://threejs.org/docs/#examples/en/loaders/GLTFLoader\n\t\treturn new Promise(function(resolve, reject) {\n\t\t\t// Loads all chess models then calls init when finished\n\t\t\tconst manager = new three__WEBPACK_IMPORTED_MODULE_0__[\"LoadingManager\"]();\n\t\t\tmanager.onLoad = resolve // Initialize game when finished loading\n\t\t\tconst loader = new three_gltf_loader__WEBPACK_IMPORTED_MODULE_1___default.a(manager);\n\n\t\t\tlet index = 0;\n\t\t\tModels.pieceData.forEach(piece => {\n\n\t\t\t\tconst path = Models.directory + piece.fileName\n\t\t\t\tloader.load(path, function(gltf) {\n\t\t\t\t\tModels.geometries[piece.name] = gltf.scene.children[0].geometry;\n\t\t\t\t});\n\n\t\t\t\tModels.pieceIndices[piece.name] = index++\n\t\t\t});\n\t\t});\n    }\n    \n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Models);\n\n//# sourceURL=webpack:///./public/js/Models.js?");

/***/ }),

/***/ "./public/js/Piece.js":
/*!****************************!*\
  !*** ./public/js/Piece.js ***!
  \****************************/
/*! exports provided: default, Pawn, Rook, Knight, Bishop, King, Queen */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Pawn\", function() { return Pawn; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Rook\", function() { return Rook; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Knight\", function() { return Knight; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Bishop\", function() { return Bishop; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"King\", function() { return King; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Queen\", function() { return Queen; });\nfunction Piece(team=-1){\n    \n    this.team = team\n    this.type = ''\n\tthis.mesh;\n\t\n}\n\nPiece.prototype = {\n    \n    movement: function(board, x, y, z, w, getPath=true){return null},\n    attack: function(board, x, y, z, w){\n        return this.movement(board, x, y, z, w, false)\n    },\n    getPossibleMoves: function(board, x, y, z, w){\n        \n        let positions = [];\n        let possibleMovements = this.movement(board, x, y, z, w).map(move => Object.assign(move, {possibleCapture: false}));\n        let possibleAttacks = this.attack(board, x, y, z, w).map(attack => Object.assign(attack, {possibleCapture: true}));\n        let possibleMovementsAndAttacks = Piece.concatUnique(possibleMovements, possibleAttacks); // Possible moves\n        positions = Piece.concatUnique(positions, possibleMovementsAndAttacks);\n        \n        positions = Piece.removeIllegalMoves(positions, board, x, y, z, w);\n        \n        return positions;\n    },\n    update: function(board, x0, y0, z0, w0, x1, y1, z1, w1){},\n    isPinned: function(board, x, y, z, w){\n        // Returns array of positions of pieces that are pinning the king\n        // temporarily modify the board so that the current piece is missing\n        board[x][y][z][w] = new Piece(); //empty piece\n        \n\t\tconst inCheck = Piece.inCheck(board, this.team);\n        board[x][y][z][w] = this;\n        return inCheck;\n        \n    },\n    setMesh: function(mesh){\n        this.mesh = mesh\n    },\n\t\n\tupdate: function(board, x0, y0, z0, w0, x1, y1, z1, w1) {\n\t\tconst metaData = {firstMove: !this.hasMoved}\n    \tthis.hasMoved = true\n\t\treturn metaData;\n\t},\n\t\n\tpackage: function() {\n\t\treturn {\n\t\t\tteam: this.team,\n\t\t\ttype: this.type,\n\t\t\thasMoved: this.hasMoved,\n\t\t\tjustMovedTwoSpaces: this.justMovedTwoSpaces || false,\n\t\t}\n\t}\n    \n}\n\nfunction Rook(team){\n    Piece.call(this, team)\n    this.type = 'rook'\n}\n\nRook.prototype = Object.create(Piece.prototype)\n\nRook.prototype.movement = function(board, x, y, z, w, getPath=true){\n    \n    let positions = []\n    \n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(1, 0, 0, 0), getPath))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(-1, 0, 0, 0), getPath))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, 1, 0, 0), getPath))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, -1, 0, 0), getPath))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, 0, 1, 0), getPath))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, 0, -1, 0), getPath))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, 0, 0, 1), getPath))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, 0, 0, -1), getPath))\n    \n    return positions\n}\n\nfunction Bishop(team){\n    Piece.call(this, team)\n    this.type = 'bishop'\n}\n\nBishop.prototype = Object.create(Piece.prototype)\n\nBishop.prototype.movement = function(board, x, y, z, w, getPath=true){\n    \n    let positions = []\n    \n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(1, 1, 0, 0), getPath))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(1, 0, 1, 0), getPath))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(1, 0, 0, 1), getPath))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, 1, 1, 0), getPath))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, 1, 0, 1), getPath))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, 0, 1, 1), getPath))\n    \n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(-1, 1, 0, 0), getPath))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(-1, 0, 1, 0), getPath))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(-1, 0, 0, 1), getPath))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, -1, 1, 0), getPath))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, -1, 0, 1), getPath))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, 0, -1, 1), getPath))\n    \n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(1, -1, 0, 0), getPath))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(1, 0, -1, 0), getPath))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(1, 0, 0, -1), getPath))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, 1, -1, 0), getPath))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, 1, 0, -1), getPath))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, 0, 1, -1), getPath))\n    \n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(-1, -1, 0, 0), getPath))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(-1, 0, -1, 0), getPath))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(-1, 0, 0, -1), getPath))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, -1, -1, 0), getPath))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, -1, 0, -1), getPath))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, 0, -1, -1), getPath))\n    \n    return positions\n}\n\nfunction Queen(team){\n    Piece.call(this, team)\n    this.type = 'queen'\n}\n\nQueen.prototype = Object.create(Piece.prototype)\n\nQueen.prototype.movement = function(board, x, y, z, w, getPath=true){\n    \n    let positions = []\n    // Rook Movements\n\tpositions = Piece.concatUnique(positions, Rook.prototype.movement(board, x, y, z, w, getPath))\n    // Bishop Movements\n\tpositions = Piece.concatUnique(positions, Bishop.prototype.movement(board, x, y, z, w, getPath))\n    \n    return positions\n}\n\nfunction Knight(team){\n    Piece.call(this, team)\n    this.type = 'knight'\n}\n\nKnight.prototype = Object.create(Piece.prototype)\n\nKnight.prototype.movement = function(board, x, y, z, w, getPath=true){\n    \n    let positions = []\n    \n    // Max iterations is 1\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(2, 1, 0, 0), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(2, 0, 1, 0), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(2, 0, 0, 1), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(1, 2, 0, 0), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, 2, 1, 0), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, 2, 0, 1), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(1, 0, 2, 0), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, 1, 2, 0), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, 0, 2, 1), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(1, 0, 0, 2), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, 1, 0, 2), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, 0, 1, 2), getPath, 1))\n    \n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(-2, 1, 0, 0), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(-2, 0, 1, 0), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(-2, 0, 0, 1), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(1, -2, 0, 0), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, -2, 1, 0), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, -2, 0, 1), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(1, 0, -2, 0), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, 1, -2, 0), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, 0, -2, 1), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(1, 0, 0, -2), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, 1, 0, -2), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, 0, 1, -2), getPath, 1))\n    \n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(2, -1, 0, 0), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(2, 0, -1, 0), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(2, 0, 0, -1), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(-1, 2, 0, 0), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, 2, -1, 0), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, 2, 0, -1), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(-1, 0, 2, 0), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, -1, 2, 0), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, 0, 2, -1), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(-1, 0, 0, 2), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, -1, 0, 2), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, 0, -1, 2), getPath, 1))\n    \n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(-2, -1, 0, 0), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(-2, 0, -1, 0), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(-2, 0, 0, -1), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(-1, -2, 0, 0), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, -2, -1, 0), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, -2, 0, -1), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(-1, 0, -2, 0), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, -1, -2, 0), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, 0, -2, -1), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(-1, 0, 0, -2), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, -1, 0, -2), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, 0, -1, -2), getPath, 1))\n    \n    \n    \n    return positions\n}\n\nfunction King(team){\n    Piece.call(this, team)\n    this.type = 'king'\n}\n\nKing.prototype = Object.create(Piece.prototype)\n\nKing.prototype.movement = function(board, x, y, z, w, getPath=true){\n    \n    let positions = []\n    \n    // Max iterations is 1\n    \n    //\n    // Rook Movements\n    //\n    \n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(1, 0, 0, 0), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(-1, 0, 0, 0), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, 1, 0, 0), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, -1, 0, 0), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, 0, 1, 0), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, 0, -1, 0), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, 0, 0, 1), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, 0, 0, -1), getPath, 1))\n    \n    //\n    // Bishop Movements\n    //\n    \n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(1, 1, 0, 0), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(1, 0, 1, 0), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(1, 0, 0, 1), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, 1, 1, 0), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, 1, 0, 1), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, 0, 1, 1), getPath, 1))\n    \n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(-1, 1, 0, 0), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(-1, 0, 1, 0), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(-1, 0, 0, 1), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, -1, 1, 0), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, -1, 0, 1), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, 0, -1, 1), getPath, 1))\n    \n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(1, -1, 0, 0), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(1, 0, -1, 0), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(1, 0, 0, -1), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, 1, -1, 0), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, 1, 0, -1), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, 0, 1, -1), getPath, 1))\n    \n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(-1, -1, 0, 0), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(-1, 0, -1, 0), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(-1, 0, 0, -1), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, -1, -1, 0), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, -1, 0, -1), getPath, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, 0, -1, -1), getPath, 1))\n    \n    \n    return positions\n}\n\nfunction Pawn(team){\n    Piece.call(this, team)\n    this.type = 'pawn'\n    \n    this.justMovedTwoSpaces = false\n    this.hasMoved = false\n    \n}\n\nPawn.prototype = Object.create(Piece.prototype)\n\nPawn.prototype.update =function(board, x0, y0, z0, w0, x1, y1, z1, w1){\n    \n    this.hasMoved = true\n    const moveDistance = Math.abs(x1 - x0) + Math.abs(y1 - y0) + Math.abs(z1 - z0) + Math.abs(w1 - w0)\n    this.justMovedTwoSpaces = moveDistance === 2\n    if (this.justMovedTwoSpaces){\n        console.log('unpeasantable!')\n    }\n    \n}\n\nPawn.prototype.attack = function(board, x, y, z, w){\n    \n    let positions = []\n    let d = this.team === 0 ? 1 : -1\n    \n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(1, 0, d, 0), false, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(-1, 0, d, 0), false, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, 1, d, 0), false, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, -1, d, 0), false, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, 0, d, d), false, 1))\n    \n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(1, 0, 0, d), false, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(-1, 0, 0, d), false, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, 1, 0, d), false, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, -1, 0, d), false, 1))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, 0, d, d), false, 1))\n    \n    \n    return positions\n    \n}\n\nPawn.prototype.movement = function(board, x, y, z, w, getPath=true){\n    \n    let positions = []\n    \n    let maxIterations = this.hasMoved ? 1 : 2\n    let d = this.team === 0 ? 1 : -1\n    \n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, 0, d, 0), getPath, maxIterations))\n    positions = Piece.concatUnique(positions, Piece.rayCast(board, new THREE.Vector4(x, y, z, w), new THREE.Vector4(0, 0, 0, d), getPath, maxIterations))\n    \n    return positions\n    \n}\n\nPawn.isOnPromotionSquare = function(board, x, y, z, w){\n    \n    const length_x = board.length\n    const length_y = board[0].length\n    const length_z = board[0][0].length\n    const length_w = board[0][0][0].length\n    \n    return (z === length_z - 1) && (w === length_w - 1)\n    \n}\n\nPiece.rayCast = function(board, position, direction, getPath=true, maxIterations=Number.POSITIVE_INFINITY){\n    \n    // Assume current team is whatver team the piece on the start position is\n    \n    const team = board[position.x][position.y][position.z][position.w].team\n    const oppositeTeam = 1 - team\n    const start = position.add(direction)\n    \n    \n    let x = start.x\n    let y = start.y\n    let z = start.z\n    let w = start.w\n    \n    const length_x = board.length\n    const length_y = board[0].length\n    const length_z = board[0][0].length\n    const length_w = board[0][0][0].length\n    \n    let positions = []\n    let iteration = 0\n    \n    while(iteration < maxIterations){\n        iteration++\n        // Check if raycast is out of bounds\n        let outOfBounds = (x >= length_x) || (y >= length_y) || (z >= length_z) || (w >= length_w) || (x < 0) || (y < 0) || (z < 0) || (w < 0)\n        if(outOfBounds) break;\n        \n        let spot = board[x][y][z][w]\n//        console.log(x, y, z, w)\n        if(spot.team >= 0/*is occupied*/){\n            if(spot.team === oppositeTeam && !getPath/*can be captured (AKA opposite team)*/){\n                positions.push(new THREE.Vector4(x, y, z, w))\n            } else {\n                // do nothing\n            }\n            break;\n        }\n        \n        if(getPath){\n            positions.push(new THREE.Vector4(x, y, z, w))\n        }\n        \n        x += direction.x;\n        y += direction.y;\n        z += direction.z;\n        w += direction.w;\n        \n    }\n    \n    return positions\n    \n}\n\nPiece.arrayContainsVector = function(arr, vector){\n    \n    for(let i = 0; i < arr.length; i++){\n        if(Piece.vec4Equals(arr[i], vector))\n            return true\n    }\n    \n    return false\n}\n\nPiece.concatUnique = function(a, b){\n\t// Concatenates two arays of Vectors, without duplicates.\n    let new_a = a.slice()\n    b.forEach(vector => {\n        \n        let contains = Piece.arrayContainsVector(new_a, vector)\n        if(!contains)\n            new_a.push(vector)\n        \n    })\n    \n    return new_a\n}\n\nPiece.vec4Equals = function(a, b){\n    return a.x === b.x &&\n            a.y === b.y &&\n            a.z === b.z &&\n            a.w === b.w\n}\n\nPiece.inCheck = function(board, team){\n    // Returns array of positions of pieces that are attacking the king\n    const oppositeTeam = 1 - team\n    const piecePositions = Piece.getPieces(board, oppositeTeam)\n    const kingPosition = Piece.getKing(board, team)\n    const attackers = []\n\t\n    for(let i = 0; i < piecePositions.length; i++){\n        \n        const pos = piecePositions[i]\n        const attacker = board[pos.x][pos.y][pos.z][pos.w]\n        const attacked = attacker.attack(board, pos.x, pos.y, pos.z, pos.w)\n        \n        for(let j = 0; j < attacked.length; j++){\n            const attackedPosition = attacked[j]\n            if(Piece.vec4Equals(kingPosition, attackedPosition))\n                attackers.push(pos)\n        }\n        \n        \n    }\n    \n    return attackers\n    \n}\n\nPiece.getPieces = function(board, team){\n    \n    const length_x = board.length\n    const length_y = board[0].length\n    const length_z = board[0][0].length\n    const length_w = board[0][0][0].length\n    \n    let positions = []\n    \n    for(let x = 0; x < length_x; x++){\n        for(let y = 0; y < length_y; y++){\n            for(let z = 0; z < length_z; z++){\n                for(let w = 0; w < length_w; w++){\n                    \n                    const piece = board[x][y][z][w]\n                    if(piece.team === team)\n                        positions.push(new THREE.Vector4(x, y, z, w))\n                    \n                }\n            }\n        }\n    }\n    \n    return positions\n    \n}\n\nPiece.getKing = function(board, team){\n    \n    const length_x = board.length\n    const length_y = board[0].length\n    const length_z = board[0][0].length\n    const length_w = board[0][0][0].length\n    \n    for(let x = 0; x < length_x; x++){\n        for(let y = 0; y < length_y; y++){\n            for(let z = 0; z < length_z; z++){\n                for(let w = 0; w < length_w; w++){\n                    \n                    const piece = board[x][y][z][w]\n                    if(piece.team === team && piece.type === 'king')\n                        return new THREE.Vector4(x, y, z, w)\n                    \n                }\n            }\n        }\n    }\n    \n    console.error('No King Found', team)\n\treturn new THREE.Vector4(-1, -1, -1, -1)\n    \n}\n\nPiece.hasNoMoves = function(board, team){\n    \n    const piecePositions = Piece.getPieces(board, team)\n    \n    for(let i = 0; i < piecePositions.length; i++){\n        \n        const pos = piecePositions[i]\n        const piece = board[pos.x][pos.y][pos.z][pos.w]\n        \n        let possibleMoves = piece.getPossibleMoves(board, pos.x, pos.y, pos.z, pos.w)\n        if(possibleMoves.length > 0)\n            return false\n        \n        \n    }\n    \n    return true\n    \n}\n\nPiece.inStalemate = function(board, team){\n    return !Piece.inCheck(board, team) && Piece.hasNoMoves(board, team)\n}\n\nPiece.inCheckmate = function(board, team){\n    \n    return Piece.inCheck(board, team) && Piece.hasNoMoves(board, team)\n    \n}\n\nPiece.removeIllegalMoves = function(positions, board, x, y, z, w){\n    const piece = board[x][y][z][w]\n    const team = piece.team\n    let legalPositions = []\n\n    board[x][y][z][w] = new Piece()\n    \n    positions.forEach(position => {\n        \n        let pos_x = position.x\n        let pos_y = position.y\n        let pos_z = position.z\n        let pos_w = position.w\n        \n        const savedPiece = board[pos_x][pos_y][pos_z][pos_w]\n        \n        board[pos_x][pos_y][pos_z][pos_w] = piece\n        \n        if(!Piece.inCheck(board, team).length){\n            legalPositions.push(position)\n        }\n        \n        board[pos_x][pos_y][pos_z][pos_w] = savedPiece\n        \n        \n    })\n\n    board[x][y][z][w] = piece\n\n    return legalPositions\n}\n\nPiece.boardsEqual = function(b0, b1, compareMeshes=false) {\n\tconst b0_x = b0.length\n    const b0_y = b0[0].length\n    const b0_z = b0[0][0].length\n    const b0_w = b0[0][0][0].length\n\t\n\tconst b1_x = b1.length\n    const b1_y = b1[0].length\n    const b1_z = b1[0][0].length\n    const b1_w = b1[0][0][0].length\n\t\n\tconst dimEq = b0_x == b1_x && b0_y == b1_y && b0_z == b1_z && b0_w == b1_w;\n\tif (!dimEq) {\n\t\tconsole.error(\"Dimensions not equal\")\n\t}\n\t\n\tfor(let x = 0; x < b0_x; x++) {\n\t\tfor(let y = 0; y < b0_y; y++) {\n\t\t\tfor(let z = 0; z < b0_z; z++) {\n\t\t\t\tfor(let w = 0; w < b0_w; w++) {\n\t\t\t\t\tconst piece0 = b0[x][y][z][w];\n\t\t\t\t\tconst piece1 = b1[x][y][z][w];\n\t\t\t\t\tif (typeof(piece0) != typeof(piece1)) {\n\t\t\t\t\t\treturn false\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn true\n//\tPiece.boardsEqual(gameBoard.pieces, backendBoard.pieces)\n}\n\nPiece.typeToConstructor = {\n\tpawn: Pawn,\n\trook: Rook,\n\tknight: Knight,\n\tbishop: Bishop,\n\tqueen: Queen,\n\tking: King,\n\t'': Piece\n}\n\nPiece.from = function(json) {\n\tconst PieceConstructor = Piece.typeToConstructor[json.type];\n\tlet newPiece = new PieceConstructor();\n\tObject.assign(newPiece, json);\n\treturn newPiece;\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Piece);\n\n\n//# sourceURL=webpack:///./public/js/Piece.js?");

/***/ }),

/***/ "./public/js/UI.js":
/*!*************************!*\
  !*** ./public/js/UI.js ***!
  \*************************/
/*! exports provided: EmptyUI, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EmptyUI\", function() { return EmptyUI; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return UI; });\nfunction EmptyUI() {\n\tthis.setState = function(state) {\n\t\tconsole.warn('proxy setState called before react component mounted')\n\t}\n\tthis.exitMenu = function() {\n\t\tconsole.warn('proxy exitMenu called before react component mounted')\n\t}\n }\n\n function UI(reactComponent) {\n\tthis._ui = reactComponent;\n\tthis.setState = function(state) {\n\t\tthis._ui.setState(state);\n\t}\n\tthis.exitMenu = function() {\n\t\tthis._ui.exitMenu();\n\t}\n }\n\n//# sourceURL=webpack:///./public/js/UI.js?");

/***/ }),

/***/ "./public/js/Utils.js":
/*!****************************!*\
  !*** ./public/js/Utils.js ***!
  \****************************/
/*! exports provided: getRandomInteger, rotateCameraAbout, DEBUG, removeEntity, eq, getObjectDiff, compare, genGameId, rotateObject */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getRandomInteger\", function() { return getRandomInteger; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"rotateCameraAbout\", function() { return rotateCameraAbout; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DEBUG\", function() { return DEBUG; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"removeEntity\", function() { return removeEntity; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"eq\", function() { return eq; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getObjectDiff\", function() { return getObjectDiff; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"compare\", function() { return compare; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"genGameId\", function() { return genGameId; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"rotateObject\", function() { return rotateObject; });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ \"three\");\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);\n\n\n/*\n * Return a random integer in [lowerBound, upperBound]\n */\nfunction getRandomInteger(lowerBound, upperBound){\n\t//          [0, 1)                range                     \n\treturn Math.floor(Math.random() * (upperBound - lowerBound) + lowerBound);\n}\n\n/*\n * Utility function to rotate camera about a point by theta radians\n */\nfunction rotateCameraAbout(camera, center, theta) {\n\tcamera.position.sub(center);\n\tlet x = camera.position.x,\n\t\ty = camera.position.y,\n\t\tz = camera.position.z;\n\tcamera.position.x = x * Math.cos(theta) + z * Math.sin(theta);\n\tcamera.position.z = z * Math.cos(theta) - x * Math.sin(theta);\n\tcamera.position.add(center);\n}\n\n/*\n * Create a debug sphere and add it to the scene\n */\nfunction DEBUG(pos, color=0xff0000, opacity=0.5) {\n\tconst geometry = new three__WEBPACK_IMPORTED_MODULE_0__[\"SphereGeometry\"]( 5, 32, 32 );\n\tconst material = new three__WEBPACK_IMPORTED_MODULE_0__[\"MeshBasicMaterial\"]({color: color, transparent:true, opacity: opacity});\n\tconst DEBUG_SPHERE = new three__WEBPACK_IMPORTED_MODULE_0__[\"Mesh\"](geometry, material);\n\tDEBUG_SPHERE.position.set(pos.x, pos.y, pos.z);\n\tscene.add(DEBUG_SPHERE);\n\treturn DEBUG_SPHERE;\n}\n\nfunction removeEntity(objectName, scene=scene) {\n\tvar selectedObject = scene.getObjectByName(objectName.name);\n\tscene.remove(selectedObject);\n}\n\nfunction eq(a, b) {\n\treturn _.reduce(a, function(result, value, key) {\n\t\treturn _.isEqual(value, b[key]) ?\n\t\t\tresult : result.concat(key);\n\t}, []);\n}\n\n/*\n * Compare two objects by reducing an array of keys in obj1, having the\n * keys in obj2 as the intial value of the result. Key points:\n *\n * - All keys of obj2 are initially in the result.\n *\n * - If the loop finds a key (from obj1, remember) not in obj2, it adds\n *   it to the result.\n *\n * - If the loop finds a key that are both in obj1 and obj2, it compares\n *   the value. If it's the same value, the key is removed from the result.\n */\nfunction getObjectDiff(obj1, obj2) {\n\tconst diff = Object.keys(obj1).reduce((result, key) => {\n\t\tif (!obj2.hasOwnProperty(key)) {\n\t\t\tresult.push(key);\n\t\t} else if (_.isEqual(obj1[key], obj2[key])) {\n\t\t\tconst resultKeyIndex = result.indexOf(key);\n\t\t\tresult.splice(resultKeyIndex, 1);\n\t\t}\n\t\treturn result;\n\t}, Object.keys(obj2));\n\n\treturn diff;\n}\n\nvar compare = function (a, b) {\n\n  var result = {\n\tdifferent: [],\n\tmissing_from_first: [],\n\tmissing_from_second: []\n  };\n\n  _.reduce(a, function (result, value, key) {\n\tif (b.hasOwnProperty(key)) {\n\t  if (_.isEqual(value, b[key])) {\n\t\treturn result;\n\t  } else {\n\t\tif (typeof (a[key]) != typeof ({}) || typeof (b[key]) != typeof ({})) {\n\t\t  //dead end.\n\t\t  result.different.push(key);\n\t\t  return result;\n\t\t} else {\n\t\t  var deeper = compare(a[key], b[key]);\n\t\t  result.different = result.different.concat(_.map(deeper.different, (sub_path) => {\n\t\t\treturn key + \".\" + sub_path;\n\t\t  }));\n\n\t\t  result.missing_from_second = result.missing_from_second.concat(_.map(deeper.missing_from_second, (sub_path) => {\n\t\t\treturn key + \".\" + sub_path;\n\t\t  }));\n\n\t\t  result.missing_from_first = result.missing_from_first.concat(_.map(deeper.missing_from_first, (sub_path) => {\n\t\t\treturn key + \".\" + sub_path;\n\t\t  }));\n\t\t  return result;\n\t\t}\n\t  }\n\t} else {\n\t  result.missing_from_second.push(key);\n\t  return result;\n\t}\n  }, result);\n\n  _.reduce(b, function (result, value, key) {\n\tif (a.hasOwnProperty(key)) {\n\t  return result;\n\t} else {\n\t  result.missing_from_first.push(key);\n\t  return result;\n\t}\n  }, result);\n\n  return result;\n}\n\n\n\nfunction genGameId() {\n\treturn 'gxxxxxxx'.replace(/[x]/g, function(character) {\n\t\tconst r = Math.random() * 16 | 0\n\t\tconst v = character == 'x' ? r : (r & 0x3 | 0x8);\n\t\treturn v.toString(16);\n\t});\n}\n\n/**\n * Utility function to rotate mesh about the x, y, and z axes.\n */\nfunction rotateObject(object, degreeX=0, degreeY=0, degreeZ=0) {\n\tobject.rotateX(three__WEBPACK_IMPORTED_MODULE_0__[\"MathUtils\"].degToRad(degreeX));\n\tobject.rotateY(three__WEBPACK_IMPORTED_MODULE_0__[\"MathUtils\"].degToRad(degreeY));\n\tobject.rotateZ(three__WEBPACK_IMPORTED_MODULE_0__[\"MathUtils\"].degToRad(degreeZ));\n}\n\n//# sourceURL=webpack:///./public/js/Utils.js?");

/***/ }),

/***/ "express":
/*!**************************!*\
  !*** external "express" ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"express\");\n\n//# sourceURL=webpack:///external_%22express%22?");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"fs\");\n\n//# sourceURL=webpack:///external_%22fs%22?");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"http\");\n\n//# sourceURL=webpack:///external_%22http%22?");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"path\");\n\n//# sourceURL=webpack:///external_%22path%22?");

/***/ }),

/***/ "socket.io":
/*!****************************!*\
  !*** external "socket.io" ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"socket.io\");\n\n//# sourceURL=webpack:///external_%22socket.io%22?");

/***/ }),

/***/ "three":
/*!************************!*\
  !*** external "three" ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"three\");\n\n//# sourceURL=webpack:///external_%22three%22?");

/***/ }),

/***/ "three-gltf-loader":
/*!************************************!*\
  !*** external "three-gltf-loader" ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"three-gltf-loader\");\n\n//# sourceURL=webpack:///external_%22three-gltf-loader%22?");

/***/ })

/******/ });